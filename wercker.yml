# The container definition we want to use for developing our app
box: golang

build:
  steps:
    - setup-go-workspace
    - wercker/golint
    - script:
        name: retrieve artifacts
        code: |
          mkdir -p output
          mkdir -p build
          if [ -d "$WERCKER_CACHE_DIR/build" ]; then cp -r $WERCKER_CACHE_DIR/build .; fi
          if [ -d "$WERCKER_CACHE_DIR/output" ]; then cp -r $WERCKER_CACHE_DIR/output .; fi
          ls -larth build
          ls -larth output
    - script:
        name: build
        code: |
          make bin
    - script:
        name: test
        code: |
          make test
    - script:
        name: Publish Coveralls
        code: goveralls -service="wercker.com" -coverprofile=profile.cov -repotoken $COVERALLS_TOKEN
    - script:
        name: publish artifacts
        code: |
          if [ -d "$WERCKER_CACHE_DIR/build" ]; then rm -rf $WERCKER_CACHE_DIR/build; fi
          if [ -d "$WERCKER_CACHE_DIR/output" ]; then rm -rf $WERCKER_CACHE_DIR/output; fi
          cp -r build $WERCKER_CACHE_DIR/build
          cp -r output $WERCKER_CACHE_DIR/output
          ls -larth build
          ls -larth output

package:
  box: ruby:2.1
  steps:
    - script:
        name: retrieve artifacts
        code: |
          cp -r $WERCKER_CACHE_DIR/build build
          cp -r $WERCKER_CACHE_DIR/output output
          ls -larth build
          ls -larth output
    - script:
        name: package
        code: |
          apt-get update && apt-get install -y unzip zip wget
          make package
    - script:
        name: publish artifacts
        code: |
          if [ -d "$WERCKER_CACHE_DIR/build" ]; then rm -rf $WERCKER_CACHE_DIR/build; fi
          if [ -d "$WERCKER_CACHE_DIR/output" ]; then rm -rf $WERCKER_CACHE_DIR/output; fi
          cp -r build $WERCKER_CACHE_DIR/build
          cp -r output $WERCKER_CACHE_DIR/output
          ls -larth build
          ls -larth output

# TODO: Get tokens for Pact foundation
deploy:
    steps:
        - tcnksm/ghr:
            token: $GITHUB_TOKEN
            version: $RELEASE_VERSION
            input: dist
            replace: $RELEASE_IS_DRAFT
            pre-release: $RELEASE_IS_DRAFT
